{"version":3,"sources":["components/Header/index.js","components/HeroSection/index.js","pages/Landing/index.js","components/Login View/index.js","pages/Login/index.js","components/Signup View/index.js","actions/types.js","pages/Signup/index.js","pages/Explore/index.js","pages/Dashboard/index.js","pages/Edit/index.js","pages/Preview/index.js","pages/Profile/index.js","pages/Create/index.js","theme.js","reducers/userReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","index.js"],"names":["MenuItems","children","handleClick","variant","borderRadius","mt","base","md","mr","display","onClick","Header","props","React","useState","show","setShow","history","useHistory","handleAbout","e","preventDefault","push","as","align","justify","wrap","padding","bg","useColorModeValue","color","size","sm","fill","width","viewBox","xmlns","d","alignItems","flexGrow","Moon","ml","colorScheme","pl","HeroSection","textAlign","h","templateRows","templateColumns","gap","colSpan","colStart","rowStart","w","textStyle","rowSpan","src","alt","colEnd","Landing","View","useEffect","console","log","handlers","setUsername","setPassword","handleLogin","m","boxShadow","rounded","onSubmit","className","id","isRequired","placeholder","onChange","type","Login","username","password","a","target","value","user","axios","post","then","res","data","alert","catch","err","response","msg","setConfirmPassword","setEmail","handleSubmit","GET_USERS","DELETE_USER","UPDATE_USER","USERS_LOADING","USER_LOADING","USER_LOADED","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","AUTH_ERROR","LOGOUT","GET_ERRORS","CLEAR_ERRORS","Signup","confirmPassword","email","length","Explore","Dashboard","isActive","Edit","Preview","Profile","setConfirmPass","Create","breakpoints","lg","xl","theme","extendTheme","config","initialColorMode","useSystemColorMode","colors","palette","100","200","300","400","500","600","700","800","textStyles","h1","fontSize","fontWeight","lineHeight","letterSpacing","h2","initialState","users","loading","error","token","localStorage","getItem","authenticated","status","combineReducers","state","action","payload","filter","_id","auth","setItem","removeItem","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","middleware","thunk","store","createStore","compose","applyMiddleware","persistor","persistStore","App","exact","path","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.65e11c35.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Box,\n  Heading,\n  Flex,\n  Button,\n  useColorModeValue,\n  Spacer,\n  Switch,\n} from \"@chakra-ui/react\";\nimport { MoonIcon } from \"@chakra-ui/icons\";\n\nconst MenuItems = ({ children, handleClick }) => {\n  return (\n    <Button\n      variant=\"outline\"\n      borderRadius=\"20px\"\n      mt={{ base: 4, md: 0 }}\n      mr={6}\n      display=\"block\"\n      onClick={handleClick}\n    >\n      {children}\n    </Button>\n  );\n};\n\nconst Header = (props) => {\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n  const history = useHistory();\n  const handleLogin = (e) => {\n    e.preventDefault();\n    history.push(\"/login\");\n  };\n  const handleAbout = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n  const handleSignup = (e) => {\n    e.preventDefault();\n    history.push(\"/signup\");\n  };\n  return (\n    <Box>\n      <Flex\n        as=\"nav\"\n        align=\"center\"\n        justify=\"space-between\"\n        wrap=\"wrap\"\n        padding=\"1.5rem\"\n        bg={useColorModeValue(\"palette.800\", \"palette.900\")}\n        color=\"white\"\n        {...props}\n      >\n        <Flex mr={5}>\n          <Heading size=\"lg\" as=\"button\" onClick={handleAbout}>\n            Carden\n          </Heading>\n        </Flex>\n\n        <Box\n          align=\"right\"\n          display={{ sm: \"block\", md: \"none\" }}\n          onClick={handleToggle}\n        >\n          <svg\n            fill=\"white\"\n            width=\"12px\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>Menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n          </svg>\n        </Box>\n\n        <Box\n          display={{ sm: show ? \"block\" : \"none\", md: \"flex\" }}\n          width={{ sm: \"full\", md: \"auto\" }}\n          alignItems=\"center\"\n          flexGrow={1}\n        >\n          <Spacer />\n          <MenuItems handleClick={handleAbout}>About</MenuItems>\n          <MenuItems handleClick={handleLogin}>Log In</MenuItems>\n          <Box\n            display={{ sm: show ? \"block\" : \"none\", md: \"block\" }}\n            mt={{ base: 4, md: 0 }}\n          >\n            <Button\n              borderRadius=\"20px\"\n              bg={useColorModeValue(\"palette.200\", \"palette.900\")}\n              color={useColorModeValue(\"palette.800\", \"palette.900\")}\n              onClick={handleSignup}\n            >\n              Sign Up\n            </Button>\n          </Box>\n          <MoonIcon ml=\"20px\" />\n          <Switch colorScheme=\"red\" size=\"md\" pl=\"10px\" />\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  GridItem,\n  Grid,\n  Button,\n  Box,\n  Text,\n  Heading,\n  Center,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction HeroSection() {\n  const history = useHistory();\n  const handleExplore = (e) => {\n    e.preventDefault();\n    history.push(\"/explore\");\n  };\n  return (\n    <div>\n      <Center color=\"white\" textAlign=\"center\">\n        <Grid\n          h=\"400px\"\n          templateRows=\"repeat(5, 1fr)\"\n          templateColumns=\"repeat(15, 1fr)\"\n          gap={9}\n        >\n          <GridItem colSpan={8} colStart={2} rowStart={2} w=\"550px\">\n            <Heading\n              align=\"left\"\n              textStyle=\"h1\"\n              size=\"3xl\"\n              color={useColorModeValue(\"palette.800\", \"palette.900\")}\n            >\n              Create and send interactive cards\n            </Heading>\n          </GridItem>\n          <GridItem rowSpan={3} colStart={10} colSpan={5} rowStart={2}>\n            <img\n              src=\"https://cdn.dribbble.com/users/2565022/screenshots/13873863/media/26f7365efaa8734508f34e640d92ba8d.gif\"\n              alt=\"Person studying\"\n            />\n          </GridItem>\n          <GridItem\n            colSpan={8}\n            colStart={2}\n            colEnd={8}\n            rowStart={3}\n            color={useColorModeValue(\"palette.600\", \"palette.900\")}\n          >\n            <Text size=\"md\" align=\"left\">\n              Instead of sending your friend a text for their next birthday,\n              send them a webpage. Choose from templates or make your own!\n            </Text>\n          </GridItem>\n          <GridItem colSpan={6} colStart={2} rowStart={4}>\n            <Button\n              borderRadius=\"20px\"\n              bg={useColorModeValue(\"palette.800\", \"palette.900\")}\n              onClick={handleExplore}\n            >\n              Explore Cards\n            </Button>\n          </GridItem>\n        </Grid>\n      </Center>\n    </div>\n  );\n}\n\nexport default HeroSection;\n","import React from \"react\";\r\n\r\nimport HeroSection from \"../../components/HeroSection\";\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div>\r\n      <HeroSection />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useColorModeValue,\r\n  Button,\r\n  Center,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction View(props) {\r\n  useEffect(() => {\r\n    console.log(props.handlers);\r\n  }, []);\r\n  const [show, setShow] = React.useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const { setUsername, setPassword, handleLogin } = props.handlers;\r\n\r\n  return (\r\n    <div>\r\n      <Center\r\n        w={[\"90%\", \"80%\"]}\r\n        h=\"100%\"\r\n        m=\"50px auto\"\r\n        boxShadow=\"dark-lg\"\r\n        rounded=\"lg\"\r\n      >\r\n        <Grid w=\"75%\" h=\"300px\" templateColumns=\"1fr\">\r\n          <Box\r\n            w=\"100%\"\r\n            h=\"175px\"\r\n            bg=\"white\"\r\n            color={useColorModeValue(\"palette.400\", \"palette.800\")}\r\n            m=\"auto\"\r\n          >\r\n            <form onSubmit={handleLogin} className=\"form\">\r\n              <FormControl id=\"username\" isRequired>\r\n                <FormLabel>Username</FormLabel>\r\n                <Input placeholder=\"Username\" onChange={setUsername} />\r\n              </FormControl>\r\n              <FormControl id=\"password\" isRequired>\r\n                <FormLabel>Password</FormLabel>\r\n                <InputGroup size=\"md\">\r\n                  <Input\r\n                    placeholder=\"Password\"\r\n                    onChange={setPassword}\r\n                    type={show ? \"text\" : \"password\"}\r\n                  />\r\n                  <InputRightElement width=\"4.5rem\">\r\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n                      {show ? \"Hide\" : \"Show\"}\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n              </FormControl>\r\n              <Button\r\n                m=\"20px auto\"\r\n                color={useColorModeValue(\"palette.700\", \"palette.400\")}\r\n                type=\"submit\"\r\n                bg={useColorModeValue(\"palette.800\", \"palette.400\")}\r\n                borderRadius=\"20px\"\r\n                w=\"50%\"\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n          {/* <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            This is the image in the wireframe\r\n          </Box> */}\r\n        </Grid>\r\n      </Center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default View;\r\n","import React, { useState } from \"react\";\r\nimport View from \"../../components/Login View\";\r\n\r\nimport axios from \"axios\";\r\nfunction Login() {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst handleLogin = async (e) => {\r\n\t\te.preventDefault();\r\n\t\t// console.log(\"hehe log in\");\r\n\t\t// Two ways of getting same info\r\n\t\tconsole.log(username.target.value, password.target.value);\r\n\t\tconsole.log(e.target.username.value, e.target.password.value);\r\n\t\tconst user = {\r\n\t\t\tusername: username.target.value,\r\n\t\t\tpassword: password.target.value,\r\n\t\t};\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/api/users/login\", user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\talert(\"Successfully Logged in!\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\talert(err.response.data.msg);\r\n\t\t\t});\r\n\t\t// await axios.post(); ..... Post req to log in, make sure to send\r\n\t\t// user name and password.\r\n\t};\r\n\treturn <View handlers={{ setUsername, setPassword, handleLogin }} />;\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tBox,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tInput,\r\n\tInputGroup,\r\n\tInputRightElement,\r\n\tuseColorModeValue,\r\n\tButton,\r\n\tCenter,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction View(props) {\r\n\tconst [show, setShow] = React.useState(false);\r\n\tconst handleClick = () => setShow(!show);\r\n\tconst {\r\n\t\tsetUsername,\r\n\t\tsetPassword,\r\n\t\tsetConfirmPassword,\r\n\t\tsetEmail,\r\n\t\thandleSubmit,\r\n\t} = props.handlers;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Center\r\n\t\t\t\tw={[\"90%\", \"80%\"]}\r\n\t\t\t\tm=\"10px auto\"\r\n\t\t\t\tboxShadow=\"dark-lg\"\r\n\t\t\t\trounded=\"lg\"\r\n\t\t\t>\r\n\t\t\t\t<Grid w=\"75%\" h=\"100%\" templateColumns=\"1fr\">\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tw=\"100%\"\r\n\t\t\t\t\t\tbg=\"white\"\r\n\t\t\t\t\t\tcolor={useColorModeValue(\"palette.400\", \"palette.800\")}\r\n\t\t\t\t\t\tm=\"15px auto\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit} className=\"form\">\r\n\t\t\t\t\t\t\t<FormControl id=\"username\" isRequired>\r\n\t\t\t\t\t\t\t\t<FormLabel>Username</FormLabel>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\t\tonChange={setUsername}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<FormControl id=\"email\" isRequired>\r\n\t\t\t\t\t\t\t\t<FormLabel>Email</FormLabel>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\tonChange={setEmail}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<FormControl id=\"password\" isRequired>\r\n\t\t\t\t\t\t\t\t<FormLabel>Password</FormLabel>\r\n\t\t\t\t\t\t\t\t<InputGroup size=\"md\">\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={setPassword}\r\n\t\t\t\t\t\t\t\t\t\ttype={show ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputRightElement width=\"4.5rem\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\th=\"1.75rem\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{show ? \"Hide\" : \"Show\"}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</InputRightElement>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<FormControl id=\"confirmPassword\" isRequired>\r\n\t\t\t\t\t\t\t\t<FormLabel>Confirm Password</FormLabel>\r\n\t\t\t\t\t\t\t\t<InputGroup size=\"md\">\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype={show ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={setConfirmPassword}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputRightElement width=\"4.5rem\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\th=\"1.75rem\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{show ? \"Hide\" : \"Show\"}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</InputRightElement>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tm=\"20px auto\"\r\n\t\t\t\t\t\t\t\tcolor={useColorModeValue(\r\n\t\t\t\t\t\t\t\t\t\"palette.700\",\r\n\t\t\t\t\t\t\t\t\t\"palette.400\"\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tbg={useColorModeValue(\r\n\t\t\t\t\t\t\t\t\t\"palette.800\",\r\n\t\t\t\t\t\t\t\t\t\"palette.400\"\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tw=\"50%\"\r\n\t\t\t\t\t\t\t\tborderRadius=\"20px\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            This is the image in the wireframe\r\n          </Box> */}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Center>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default View;\r\n","// These are just constants that we export\nexport const GET_USERS = \"GET_USERS\";\nexport const FIND_USER = \"FIND_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const USERS_LOADING = \"USERS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const REGISTER_START = \"REGISTER_START\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import React, { useState } from \"react\";\r\nimport View from \"../../components/Signup View\";\r\n// The following imports are for redux\r\n// This connects the frontend to backend.\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nfunction Signup() {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\t// const checkUsernameUnique = async () => {\r\n\t// \t//   make api call here (username.target.value)\r\n\t// \treturn true;\r\n\t// };\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\t// can user either e.target....\r\n\t\t// or the const values above like email.target.value, idk why chakra uis doing something so\r\n\t\t// cant just do password != confirmPassword to check vals :(\r\n\t\t// console.log(\r\n\t\t// \te.target.username.value,\r\n\t\t// \te.target.email.value,\r\n\t\t// \te.target.password.value,\r\n\t\t// \te.target.confirmPassword.value\r\n\t\t// );\r\n\t\tif (password.target.value !== confirmPassword.target.value) {\r\n\t\t\talert(\"passwords dont match\");\r\n\t\t\tconsole.log(\"passwords dont match\");\r\n\t\t\t// change styles to make password field red?\r\n\t\t\t//   alert(\"Passwords must match!\");\r\n\t\t\t// no register :(\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// These are arbitrary checks, we can change as we like\r\n\t\tif (password.target.value.length < 5) {\r\n\t\t\talert(\"Password must be at least 5 characters\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (username.target.value.length < 5) {\r\n\t\t\talert(\"Username must be at least 5 characters\");\r\n\t\t}\r\n\t\t// if (!checkUsernameUnique()) {\r\n\t\t// \talert(\r\n\t\t// \t\t\"username must be unique, this is already taken please try something else\"\r\n\t\t// \t);\r\n\t\t// }\r\n\t\t// console.log(\"hehe Sign up\");\r\n\t\t// do some more validation here\r\n\t\t// - check username (make api call to check username is unqiue, ie. not already in db),\r\n\t\t//   username cannot be empty string so validate this.\r\n\t\tconst user = {\r\n\t\t\tusername: username.target.value,\r\n\t\t\temail: email.target.value,\r\n\t\t\tpassword: password.target.value,\r\n\t\t};\r\n\t\tconsole.log(user);\r\n\t\tawait axios\r\n\t\t\t.post(\"/api/users\", user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\talert(\"Successfully Registered!\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.response.data);\r\n\t\t\t\talert(err.response.data.msg);\r\n\t\t\t});\r\n\t\t// if (this.props.error.status !== 200 || this.props.error.msg) {\r\n\t\t// \talert(this.props.error.msg);\r\n\t\t// }\r\n\r\n\t\t// await axios.post(); ..... Post req to sign in api end point,\r\n\t\t// send username, password, email\r\n\t};\r\n\treturn (\r\n\t\t<View\r\n\t\t\thandlers={{\r\n\t\t\t\tsetUsername,\r\n\t\t\t\tsetPassword,\r\n\t\t\t\tsetConfirmPassword,\r\n\t\t\t\tsetEmail,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n// Signup.propTypes = {\r\n// \tregisterUser: PropTypes.func.isRequired,\r\n// \tuser: PropTypes.object,\r\n// \t// authenticated: PropTypes.object,\r\n// \t// msg: PropTypes.object,\r\n// };\r\n// // This is the user state from the reducer.\r\n// const mapStateToProps = (state) => ({\r\n// \tauth: state.auth,\r\n// \terror: state.error,\r\n// });\r\n\r\n// export default connect(mapStateToProps, { registerUser })(Signup);\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Explore() {\r\n  return (\r\n    <div>\r\n      <Grid h=\"100%\" templateColumns=\"1fr 5fr\" gap={2}>\r\n        <GridItem>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            <Heading>This is complicated page..sgsgegesg.</Heading>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            big oofs\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  // run use effect once\r\n  useEffect(() => {\r\n    // Check here the user is logged in\r\n    // either we use tokens sent by server after log in function\r\n    // or check a user context\r\n    // if not logged in redirect to main page\r\n    // history.push(\"/\");, otherwise we are good to go\r\n  }, []);\r\n  const handleBrowse = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    // log user out\r\n    // remove their user data\r\n    history.push(\"/\");\r\n  };\r\n  const handleAbout = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid h=\"100%\" templateColumns=\"1fr 5fr\" gap={2}>\r\n        <GridItem>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            <Grid h=\"100%\" templateColumns=\"1fr\" gap={0}>\r\n              <GridItem>\r\n                <Button isActive=\"true\" w=\"100%\" onClick={handleBrowse}>\r\n                  Browse Cards\r\n                </Button>\r\n                <Button w=\"100%\">How to use</Button>\r\n                <Button w=\"100%\" onClick={handleAbout}>\r\n                  About\r\n                </Button>\r\n                <Button w=\"100%\">Help/Faq</Button>\r\n                <Button w=\"100%\" onClick={handleLogout}>\r\n                  Log out\r\n                </Button>\r\n              </GridItem>\r\n            </Grid>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            <Heading>Browse Cards</Heading>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import EditTemplate from \"../../components/EditTemplate\";\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Edit() {\r\n  //   let { path, url } = useRouteMatch();\r\n  //   const history = useHistory();\r\n  //   const { cardId, cardName } = props;\r\n  //   const [cardDetails, setDetails] = useState();\r\n  const cardName = \"Card\"; // remove this later\r\n  // run use effect once\r\n  useEffect(() => {\r\n    // Pull card info from db here\r\n    // use cardId and make get request\r\n    // setDetails(...);\r\n  }, []);\r\n  return (\r\n    <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n      <Heading>Editing Template: {cardName}</Heading>\r\n      {/* {cardDetails && <EditTemplate props={cardDetails}/> }*/}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import ViewTemplate from \"../../components/ViewTemplate\"; <- create this\r\nimport {\r\n\tGrid,\r\n\tGridItem,\r\n\tHeading,\r\n\tBox,\r\n\tFormControl,\r\n\tFormLabel,\r\n\tInput,\r\n\tButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Preview() {\r\n\t//   const history = useHistory();\r\n\t//   const { cardId, cardName } = props;\r\n\t//   const [cardDetails, setDetails] = useState();\r\n\t// const [link, setLink] = useState();\r\n\tconst cardName = \"Card\"; // remove this later\r\n\t// run use effect once\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"hi from preview\");\r\n\t\t// Pull card info from db here\r\n\t\t// use cardId and make get request\r\n\t\t// setDetails(...);\r\n\t\t// create link for card;\r\n\t\t// setLink();\r\n\t}, []);\r\n\treturn (\r\n\t\t<Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n\t\t\t<Heading>PREVIEW TIME{cardName}</Heading>\r\n\t\t\t<Grid templateColumns=\"1fr 4fr\">\r\n\t\t\t\t<GridItem>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t{/* <FormControl id=\"Link\" >\r\n                <FormLabel>Send this link:</FormLabel>\r\n                <Input placeholder=\"https://egift.com/link\" value={link} />\r\n                </FormControl> */}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t{/* {cardDetails && <ViewTemplate props={cardDetails}/> }*/}\r\n\t\t\t\t</GridItem>\r\n\t\t\t\t<GridItem>\r\n\t\t\t\t\t{/* {cardDetails && <ViewTemplate props={cardDetails}/> }*/}\r\n\t\t\t\t</GridItem>\r\n\t\t\t</Grid>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default Preview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  GridItem,\r\n  Grid,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n  Text,\r\n  Input,\r\n  Heading,\r\n  Center,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Profile() {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState();\r\n  const [email, setEmail] = useState(\"Mail\");\r\n  const [password, setPassword] = useState();\r\n  const [confirmPass, setConfirmPass] = useState();\r\n  useEffect(() => {\r\n    //  Get user info populated\r\n    setUsername(\"Me\");\r\n    // etc this should be existing info with the exception of passwords we dont get those\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"handleSubmit\");\r\n  };\r\n  return (\r\n    <Center>\r\n      <Heading>Profile</Heading>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            <FormControl id=\"username\" isRequired>\r\n              <FormLabel>Username</FormLabel>\r\n              <Input placeholder=\"Username\" onChange={setUsername} />\r\n            </FormControl>\r\n            <FormControl id=\"email\" isRequired>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"email@mail.com\"\r\n                onChange={setEmail}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\" isRequired>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={setPassword}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"confirmPass\" isRequired>\r\n              <FormLabel>Confirm Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={setConfirmPass}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n            <Grid templateColumns=\"repeat(1, 1fr)\" gap={2}>\r\n              <img\r\n                src=\"https://cdn.dribbble.com/users/2565022/screenshots/13873863/media/26f7365efaa8734508f34e640d92ba8d.gif\"\r\n                alt=\"Person studying\"\r\n              />\r\n              <Button colorScheme=\"green\" type=\"submit\">\r\n                Save Settings\r\n              </Button>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n      </form>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import CreateTemplate from \"../../components/CreateTemplate\"; <- make this\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction Create() {\r\n  //   let { path, url } = useRouteMatch();\r\n  //   const history = useHistory();\r\n  //   const { cardId, cardName } = props;\r\n  //   const [cardDetails, setDetails] = useState();\r\n  // run use effect once\r\n  useEffect(() => {\r\n    // Validate user is logged in, and can make templates\r\n    // if not then history.push(\"/explore\");\r\n  }, []);\r\n  return (\r\n    <Box w=\"100%\" h=\"100%\" bg=\"blue.500\">\r\n      <Heading>Creating Template</Heading>\r\n      {/* {<CreateTemplate props={cardDetails}/> }*/}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import { extendTheme } from \"@chakra-ui/react\"\n\nconst config = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n}\n\nconst breakpoints = [\"360px\", \"768px\", \"1024px\", \"1440px\"];\nbreakpoints.sm = breakpoints[0];\nbreakpoints.md = breakpoints[1];\nbreakpoints.lg = breakpoints[2];\nbreakpoints.xl = breakpoints[3];\n\nconst theme = extendTheme({ \n    config,\n    breakpoints,\n    colors: {\n        palette: {\n          100: \"#ffc024\", // Orange\n          200: \"#f7f7ee\", // Off-white\n          300: \"#62d3d4\", // Blue\n          400: \"#205d75\", // Dark blue\n          500: \"#fea09e\", // Pink\n          600: \"#525252\", // Dark grey\n          700: \"#ffffff\", // White\n          800: \"#826ad7\" // Purple\n        },\n      },\n      textStyles: {\n        h1: {\n          fontSize: [\"12px\", \"12px\"],\n          fontWeight: \"bold\",\n          lineHeight: \"110%\",\n          letterSpacing: \"-2%\",\n        },\n        h2: {\n          fontSize: [\"36px\", \"48px\"],\n          fontWeight: \"semibold\",\n          lineHeight: \"110%\",\n          letterSpacing: \"-1%\",\n        },\n      }\n})\nexport default theme","// This is where the state is going to go, and where actions go\n// This allows us to hookup to the backend and get data from mongo.\nimport {\n\tGET_USERS,\n\tDELETE_USER,\n\tUPDATE_USER,\n\tUSERS_LOADING,\n\tLOGOUT,\n} from \"../actions/types\";\n// Add the users array here.\nconst initialState = {\n\tusers: [],\n\tloading: false,\n\tmsg: {},\n\terror: null,\n};\n\n// DONT FIX THIS LINTING ERROR, IT FUCKS IT UP\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_USERS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase DELETE_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: state.users.filter(\n\t\t\t\t\t(user) => user._id !== action.payload\n\t\t\t\t),\n\t\t\t};\n\t\tcase UPDATE_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: [action.payload, ...state.users],\n\t\t\t};\n\t\tcase USERS_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: [],\n\t\t\t\tloading: false,\n\t\t\t\tmsg: {},\n\t\t\t\terror: null,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import {\n\tUSER_LOADING,\n\tUSER_LOADED,\n\tREGISTER_START,\n\tREGISTER_SUCCESS,\n\tREGISTER_FAILURE,\n\tLOGIN_START,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAILURE,\n\tLOGOUT,\n\tAUTH_ERROR,\n} from \"../actions/types\";\n\n// the redux state to hold our current user as well as if they are authenticated or not\nconst initialState = {\n\ttoken: localStorage.getItem(\"token\"),\n\tuser: null,\n\tauthenticated: false,\n\tloading: false,\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase USER_LOADING:\n\t\tcase REGISTER_START:\n\t\tcase LOGIN_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase USER_LOADED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.payload,\n\t\t\t\tloading: false,\n\t\t\t\tauthenticated: true,\n\t\t\t};\n\t\tcase REGISTER_SUCCESS:\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem(\"token\", action.payload.token);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t\tloading: false,\n\t\t\t\tauthenticated: true,\n\t\t\t};\n\t\tcase AUTH_ERROR:\n\t\tcase REGISTER_FAILURE:\n\t\tcase LOGIN_FAILURE:\n\t\tcase LOGOUT:\n\t\t\tlocalStorage.removeItem(\"token\");\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: null,\n\t\t\t\ttoken: null,\n\t\t\t\tauthenticated: false,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { GET_ERRORS, CLEAR_ERRORS, LOGOUT } from \"../actions/types\";\n\nconst initialState = {\n\tmsg: {},\n\tstatus: null,\n\tid: null,\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: action.payload.msg,\n\t\t\t\tstatus: action.payload.status,\n\t\t\t\tid: action.payload.id,\n\t\t\t};\n\t\tcase LOGOUT:\n\t\tcase CLEAR_ERRORS:\n\t\t\treturn {\n\t\t\t\tmsg: {},\n\t\t\t\tstatus: null,\n\t\t\t\tid: null,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\n// If we want to add more reducers, do so below.\nexport default combineReducers({\n\tuser: userReducer,\n\tauth: authReducer,\n\terror: errorReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\n// Redux Persist stuff\nimport { persistStore, persistReducer } from \"redux-persist\"; // imports from redux-persist\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst persistConfig = {\n\tkey: \"root\",\n\tstorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\tpersistedReducer, // pass the persisted reducer instead of rootReducer\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware)\n\t\t//REMOVE THIS LINE FOR PRODUCTION\n\t\t// window.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t// \twindow.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch as RRSwitch,\n\tRoute,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Landing from \"./pages/Landing\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Explore from \"./pages/Explore\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Edit from \"./pages/Edit\";\nimport Preview from \"./pages/Preview\";\nimport Profile from \"./pages/Profile\";\nimport Create from \"./pages/Create\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./styles/index.css\";\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={null} persistor={persistor}>\n\t\t\t\t{\" \"}\n\t\t\t\t{/* null passed to loading, persistor is being used here */}\n\t\t\t\t<Router>\n\t\t\t\t\t<ChakraProvider theme={theme}>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<RRSwitch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<Route exact path=\"/explore\" component={Explore} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/dashboard\"\n\t\t\t\t\t\t\t\tcomponent={Dashboard}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route exact path=\"/edit\" component={Edit} />\n\t\t\t\t\t\t\t<Route exact path=\"/preview\" component={Preview} />\n\t\t\t\t\t\t\t<Route exact path=\"/profile\" component={Profile} />\n\t\t\t\t\t\t\t<Route exact path=\"/create\" component={Create} />\n\t\t\t\t\t\t</RRSwitch>\n\t\t\t\t\t</ChakraProvider>\n\t\t\t\t</Router>\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}